--- mspdebug-0.5-dist/main.c	2010-03-20 12:39:52.000000000 +0900
+++ mspdebug-0.5/main.c	2010-03-21 02:57:02.000000000 +0900
@@ -195,7 +195,7 @@ static int cmd_dis(char **arg)
 	char *len_text = get_arg(arg);
 	int offset = 0;
 	int length = 0x40;
-	u_int8_t buf[512];
+	u_int8_t buf[0x1000];
 
 	if (!off_text) {
 		fprintf(stderr, "md: offset must be specified\n");
--- mspdebug-0.5-dist/dis.c	2010-03-20 12:39:52.000000000 +0900
+++ mspdebug-0.5/dis.c	2010-03-21 03:01:16.000000000 +0900
@@ -442,63 +442,63 @@ static const char *msp_op_name(msp430_op
 		const char      *mnemonic;
 	} ops[] = {
 		/* Single operand */
-		{MSP430_OP_RRC,         "RRC"},
-		{MSP430_OP_SWPB,        "SWPB"},
-		{MSP430_OP_RRA,         "RRA"},
-		{MSP430_OP_SXT,         "SXT"},
-		{MSP430_OP_PUSH,        "PUSH"},
-		{MSP430_OP_CALL,        "CALL"},
-		{MSP430_OP_RETI,        "RETI"},
+		{MSP430_OP_RRC,         "rrc"},
+		{MSP430_OP_SWPB,        "swpb"},
+		{MSP430_OP_RRA,         "rra"},
+		{MSP430_OP_SXT,         "sxt"},
+		{MSP430_OP_PUSH,        "push"},
+		{MSP430_OP_CALL,        "call"},
+		{MSP430_OP_RETI,        "reti"},
 
 		/* Jump */
-		{MSP430_OP_JNZ,         "JNZ"},
-		{MSP430_OP_JZ,          "JZ"},
-		{MSP430_OP_JNC,         "JNC"},
-		{MSP430_OP_JC,          "JC"},
-		{MSP430_OP_JN,          "JN"},
-		{MSP430_OP_JL,          "JL"},
-		{MSP430_OP_JGE,         "JGE"},
-		{MSP430_OP_JMP,         "JMP"},
+		{MSP430_OP_JNZ,         "jnz"},
+		{MSP430_OP_JZ,          "jz"},
+		{MSP430_OP_JNC,         "jnc"},
+		{MSP430_OP_JC,          "jc"},
+		{MSP430_OP_JN,          "jn"},
+		{MSP430_OP_JL,          "jl"},
+		{MSP430_OP_JGE,         "jge"},
+		{MSP430_OP_JMP,         "jmp"},
 
 		/* Double operand */
-		{MSP430_OP_MOV,         "MOV"},
-		{MSP430_OP_ADD,         "ADD"},
-		{MSP430_OP_ADDC,        "ADDC"},
-		{MSP430_OP_SUBC,        "SUBC"},
-		{MSP430_OP_SUB,         "SUB"},
-		{MSP430_OP_CMP,         "CMP"},
-		{MSP430_OP_DADD,        "DADD"},
-		{MSP430_OP_BIT,         "BIT"},
-		{MSP430_OP_BIC,         "BIC"},
-		{MSP430_OP_BIS,         "BIS"},
-		{MSP430_OP_XOR,         "XOR"},
-		{MSP430_OP_AND,         "AND"},
+		{MSP430_OP_MOV,         "mov"},
+		{MSP430_OP_ADD,         "add"},
+		{MSP430_OP_ADDC,        "addc"},
+		{MSP430_OP_SUBC,        "subc"},
+		{MSP430_OP_SUB,         "sub"},
+		{MSP430_OP_CMP,         "cmp"},
+		{MSP430_OP_DADD,        "dadd"},
+		{MSP430_OP_BIT,         "bit"},
+		{MSP430_OP_BIC,         "bic"},
+		{MSP430_OP_BIS,         "bis"},
+		{MSP430_OP_XOR,         "xor"},
+		{MSP430_OP_AND,         "and"},
 
 		/* Emulated instructions */
-		{MSP430_OP_ADC,         "ADC"},
-		{MSP430_OP_BR,          "BR"},
-		{MSP430_OP_CLR,         "CLR"},
-		{MSP430_OP_CLRC,        "CLRC"},
-		{MSP430_OP_CLRN,        "CLRN"},
-		{MSP430_OP_CLRZ,        "CLRZ"},
-		{MSP430_OP_DADC,        "DADC"},
-		{MSP430_OP_DEC,         "DEC"},
-		{MSP430_OP_DECD,        "DECD"},
-		{MSP430_OP_DINT,        "DINT"},
-		{MSP430_OP_EINT,        "EINT"},
-		{MSP430_OP_INC,         "INC"},
-		{MSP430_OP_INCD,        "INCD"},
-		{MSP430_OP_INV,         "INV"},
-		{MSP430_OP_NOP,         "NOP"},
-		{MSP430_OP_POP,         "POP"},
-		{MSP430_OP_RET,         "RET"},
-		{MSP430_OP_RLA,         "RLA"},
-		{MSP430_OP_RLC,         "RLC"},
-		{MSP430_OP_SBC,         "SBC"},
-		{MSP430_OP_SETC,        "SETC"},
-		{MSP430_OP_SETN,        "SETN"},
-		{MSP430_OP_SETZ,        "SETZ"},
-		{MSP430_OP_TST,         "TST"}
+		{MSP430_OP_ADC,         "adc"},
+		{MSP430_OP_BR,          "br"},
+		{MSP430_OP_CLR,         "clr"},
+		{MSP430_OP_CLRC,        "clrc"},
+		{MSP430_OP_CLRN,        "clrn"},
+		{MSP430_OP_CLRZ,        "clrz"},
+		{MSP430_OP_DADC,        "dadc"},
+		{MSP430_OP_DEC,         "dec"},
+		{MSP430_OP_DECD,        "decd"},
+		{MSP430_OP_DINT,        "dint"},
+		{MSP430_OP_EINT,        "eint"},
+		{MSP430_OP_INC,         "inc"},
+		{MSP430_OP_INCD,        "incd"},
+		{MSP430_OP_INV,         "inv"},
+		{MSP430_OP_NOP,         "nop"},
+		{MSP430_OP_POP,         "pop"},
+		{MSP430_OP_RET,         "ret"},
+		{MSP430_OP_RLA,         "rla"},
+		{MSP430_OP_RLC,         "rlc"},
+		{MSP430_OP_SBC,         "sbc"},
+		{MSP430_OP_SETC,        "setc"},
+		{MSP430_OP_SETN,        "setn"},
+		{MSP430_OP_SETZ,        "setz"},
+		{MSP430_OP_TST,         "tst"}
 	};
 	int i;
 
@@ -510,10 +510,10 @@ static const char *msp_op_name(msp430_op
 }
 
 static const char *const msp430_reg_names[] = {
-	"PC",  "SP",  "SR",  "R3",
-	"R4",  "R5",  "R6",  "R7",
-	"R8",  "R9",  "R10", "R11",
-	"R12", "R13", "R14", "R15"
+	"pc",  "sp",  "sr",  "r3",
+	"r4",  "r5",  "r6",  "r7",
+	"r8",  "r9",  "r10", "r11",
+	"r12", "r13", "r14", "r15"
 };
 
 static int format_addr(char *buf, int max_len, const char *prefix,
@@ -577,7 +577,7 @@ int dis_format(char *buf, int max_len,
 	/* Opcode mnemonic */
 	count = snprintf(buf, max_len, "%s", msp_op_name(insn->op));
 	if (insn->is_byte_op)
-		count += snprintf(buf + count, max_len - count, ".B");
+		count += snprintf(buf + count, max_len - count, ".b");
 	while (count < 8 && count + 1 < max_len)
 		buf[count++] = ' ';
 
@@ -602,12 +602,20 @@ int dis_format(char *buf, int max_len,
 		    insn->dst_mode == MSP430_AMODE_IMMEDIATE)
 			count += format_addr(buf + count, max_len - count,
 					     "#", insn->dst_addr);
-		else
+		else {
+      const char *dist = buf + count;
 			count += format_operand(buf + count,
 						max_len - count,
 						insn->dst_mode,
 						insn->dst_addr,
 						insn->dst_reg);
+      if ((insn->op & 0xe000) == MSP430_OP_JNZ && strchr(dist, '+')) {
+        int tab = (count < 56) ? 56 - count: count % 4;
+        if (tab == 0) tab = 4;
+        count += snprintf(buf + count, max_len - count,
+                          "%*c; %04x", tab, ' ', insn->dst_addr);
+      }
+    }
 	}
 
 	buf[count] = 0;
