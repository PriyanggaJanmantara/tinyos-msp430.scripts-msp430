#!/bin/bash
# -*- mode: shell-script; mode: flyspell-prog; -*-
#
# Copyright (c) 2010, Tadashi G Takaoka
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# - Redistributions of source code must retain the above copyright
#   notice, this list of conditions and the following disclaimer.
# - Redistributions in binary form must reproduce the above copyright
#   notice, this list of conditions and the following disclaimer in
#   the documentation and/or other materials provided with the
#   distribution.
# - Neither the name of Tadashi G. Takaoka nor the names of its
#   contributors may be used to endorse or promote products derived
#   from this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
# STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
# OF THE POSSIBILITY OF SUCH DAMAGE.
#

# target
target=msp430

# install prefix
prefix=/opt/msp430

release_mspgcc=mspgcc-20110716
#release_mspgcc=current

release_mspdebug=mspdebug-0.17
#release_mspdebug=current

# mspgcc
url_gnu=ftp://ftp.gnu.org/pub/gnu
if [[ $release_mspgcc == current ]]; then
    repo_mspgcc=git://mspgcc.git.sourceforge.net/gitroot/mspgcc
    repo_binutils=$repo_mspgcc/binutils
    repo_gcc=$repo_mspgcc/gcc
    repo_msp430libc=$repo_mspgcc/msp430-libc
    repo_msp430mcu=$repo_mspgcc/msp430mcu
    repo_gdb=$repo_mspgcc/gdb
    branch_gdb=legacy/release/gdb-7.2
else
    url_mspgcc_base=http://sourceforge.net/projects/mspgcc/files
    url_mspgcc=$url_mspgcc_base/mspgcc/$release_mspgcc.tar.bz2/download
fi

# gnu
gmp=gmp-4.3.2
mpfr=mpfr-2.4.2
url_gmp=$url_gnu/gmp/$gmp.tar.bz2
url_mpfr=http://www.mpfr.org/$mpfr/$mpfr.tar.bz2

# mpc
mpc=mpc-0.8.2
url_mpc=http://www.multiprecision.org/mpc/download/$mpc.tar.gz

# mspdebug
if [[ $release_mspdebug == current ]]; then
    repo_mspdebug=git://mspdebug.git.sourceforge.net/gitroot/mspdebug/mspdebug
    mspdebug=mspdebug
else
    mspdebug=$release_mspdebug
    url_mspdebug=http://sourceforge.net/projects/mspdebug/files/$mspdebug.tar.gz/download
fi

function msp430_patch_file() {
    echo $release_mspgcc/msp430-$1-*.patch
}

function msp430_gnu_version() {
    local tmp=$(basename $1 .patch)
    tmp=${tmp#msp430-}
    echo ${tmp%-*}
}

function msp430_libc_version() {
    echo $1-$(basename $(cat $release_mspgcc/$1.version))
}

function msp430_list_patches() {
    local prog=$1
    cat $patchesdir/README.rst | \
    while read line; do
        [[ $line =~ \*\ ($prog-[^ ]*)\ : ]] \
            && echo "${BASH_REMATCH[1]}.patch"
    done | \
    sort
}

function msp430_download_patches() {
    local prog=$1
    for p in $(msp430_list_patches $prog); do
        [[ -f $patchesdir/$p ]] \
            || fetch $url_patches_base/$p/download $patchesdir/$p \
            || die "can not fetch $p from $url_patches_base"
    done
}

function msp430_apply_patches() {
    local prog=$1 dir=$2
    for p in $(msp430_list_patches $prog); do
        cat $patchesdir/$p | patch -p1 -d $dir \
            || dir "patch $p failed"
    done
}

function config_prepare() {
    cd $buildtop
    if [[ $release_mspgcc == current ]]; then
        binutils=mspgcc-binutils
        gcc=mspgcc-gcc
        msp430libc=mspgcc-msp430-libc
        msp430mcu=mspgcc-msp430mcu
        gdb=mspgcc-gdb
        if [[ -d mspgcc ]]; then
            mv -f mspgcc/binutils $binutils
            mv -f mspgcc/gcc $gcc
            mv -f mspgcc/msp430-libc $msp430libc
            mv -f mspgcc/msp430mcu $msp430mcu
            mv -f mspgcc/gdb $gdb
            rm -rf mspgcc
        fi
    else
        [[ -f $release_mspgcc.tar.bz2 ]] \
            || fetch $url_mspgcc $release_mspgcc.tar.bz2 \
            || die "can not fetch mspgcc from $url_mspgcc"
        [[ -d $release_mspgcc ]] \
            || tar xjf $release_mspgcc.tar.bz2

        patch_binutils=$(msp430_patch_file binutils)
        binutils=$(msp430_gnu_version $patch_binutils)
        url_binutils=$url_gnu/binutils/$binutils.tar.bz2

        patch_gcc=$(msp430_patch_file gcc)
        gcc=$(msp430_gnu_version $patch_gcc)
        url_gcc=$url_gnu/gcc/$gcc/$gcc.tar.bz2

        msp430libc=$(msp430_libc_version msp430-libc)
        url_msp430libc=$url_mspgcc_base/msp430-libc/$msp430libc.tar.bz2
        msp430mcu=$(msp430_libc_version msp430mcu)
        url_msp430mcu=$url_mspgcc_base/msp430mcu/$msp430mcu.tar.bz2

        patch_gdb=$(msp430_patch_file gdb)
        gdb=$(msp430_gnu_version $patch_gdb)
        url_gdb=$url_gnu/gdb/$gdb.tar.bz2

        url_patches_base=$url_mspgcc_base/Patches/LTS/${release_mspgcc#mspgcc-}
        patchesdir=$buildtop/$release_mspgcc-patches
        [[ -d $patchesdir ]] \
            || mkdir -p $patchesdir
        [[ -f $patchesdir/README.rst ]] \
            || fetch $url_patches_base/README.rst/download $patchesdir/README.rst \
            || die "can not fetch README.rst from $url_patches_base"
    fi
}

# Local Variables:
# indent-tabs-mode: nil
# End:
# vim: set et ts=4 sw=4:
